name: Artifacts (Package)

on: [push, pull_request, workflow_dispatch]

jobs:
  artifacts-mingw-w64:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      id: checkout-code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup problem matcher
      uses: Joshua-Ashton/gcc-problem-matcher@v2

    - name: Build release
      id: build-release
      uses: Joshua-Ashton/arch-mingw-github-action@v8
      with:
        command: |
          export VERSION_NAME="${GITHUB_REF##*/}-${GITHUB_SHA##*/}"
          ./package-release.sh ${VERSION_NAME} build --no-package
          echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dxvk-${{ env.VERSION_NAME }}
        path: build/dxvk-${{ env.VERSION_NAME }}
        if-no-files-found: error

  artifacts-steamrt-sniper:
    runs-on: ubuntu-20.04
    container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk:beta

    steps:
    - name: Checkout code
      id: checkout-code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup problem matcher
      uses: Joshua-Ashton/gcc-problem-matcher@v2

    - name: Build release
      id: build-release
      shell: bash
      run: |
        export VERSION_NAME="${GITHUB_REF##*/}-${GITHUB_SHA##*/}"
        ./package-native.sh ${VERSION_NAME} build --no-package
        echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

    - name: Upload artifacts
      id: upload-artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dxvk-${{ env.VERSION_NAME }}
        path: build/dxvk-native-${{ env.VERSION_NAME }}
        if-no-files-found: error
        
  artifacts-async:
      runs-on: ubuntu-20.04

      steps:
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup problem matcher
        uses: Joshua-Ashton/gcc-problem-matcher@v2

      - name: Build Async
        id: build-release
        uses: Joshua-Ashton/arch-mingw-github-action@v8
        with:
          command: |
            export VERSION_NAME="${GITHUB_REF##*/}-${GITHUB_SHA##*/}"
            curl -O https://gitlab.com/Ph42oN/dxvk-gplasync/-/raw/main/dxvk-gplasync-2.1-2.patch
            patch -p1 < dxvk-gplasync-2.1-2.patch
            ./package-release.sh ${VERSION_NAME}-async build --no-package
            echo "VERSION_NAME=${VERSION_NAME}-async" >> $GITHUB_ENV

      - name: Upload artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dxvk-${{ env.VERSION_NAME }}-async
          path: build/dxvk-${{ env.VERSION_NAME }}
          if-no-files-found: error
